# =============================================================================
# Project build system
# =============================================================================

.EXPORT_ALL_VARIABLES:

# POSIX locale
LC_ALL=C

# ANSI formatting
B   = [1m
U   = [4m
RED = [31m
RST = [0m

MAKE := $(MAKE) --no-print-directory
PATH := $(shell yarn bin):$(PATH)

# Autogenerated help target
# =============================================================================

.DEFAULT_GOAL = help

.PHONY: help
help:
	@ printf 'Usage: \e$(B)make\e$(RST) [\e$(U)TARGET\e$(RST)]\n\n'
	@ printf 'Available targets:\n\n'
	@ grep -E '^.PHONY: [-a-z]+ #' Makefile | \
		sed -E 's,^.PHONY: ([-a-z]+) # (.*),\1#\2,' | \
		column -s '#' -t | \
		sed -E "s,^([-a-z]+),  \x1B$(B)\1\x1B$(RST),"

# Primary targets
# =============================================================================

.PHONY: init # Initialize the project
init:

init: yarn.lock
node_modules: package.json
	yarn install
	touch $@

.PHONY: _trunk_tests
init: _trunk_tests
_trunk_tests: node_modules
	@ test -d .trunk || $(MAKE) _trunk-init
	@ git config core.hooksPath | \
		grep trunk >/dev/null 2>&1 || $(MAKE) _trunk-git-hooks

.PHONY: _trunk-init
_trunk-init:
	trunk init

.PHONY: _trunk-git-hooks
_trunk-git-hooks:
	trunk git-hooks sync

.PHONY: upgrade # Upgrade project dependencies
upgrade:

.PHONY: _upgrade-yarn
upgrade: _upgrade-yarn
_upgrade-yarn: node_modules
	yarn upgrade
	touch $<

.PHONY: _upgrade-trunk
upgrade: _upgrade-trunk
_upgrade-trunk: _trunk_tests
	trunk upgrade

.PHONY: check # Check files in your current changeset
check: init
	trunk check

.PHONY: check-all # Check all files
check-all: init
	trunk check --all

.PHONY: fmt # Format files in your current changeset
fmt: init
	trunk fmt

.PHONY: fmt-all # Format all files
fmt-all: init
	trunk fmt --all

.PHONY: clean # Clean the project directory
clean:
	git clean -f -d -X
	find . -type d -empty -delete
